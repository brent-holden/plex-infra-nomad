#!/bin/sh
### BEGIN INIT INFO
# Provides:          nomad
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: distributed scheduler
# Description:       distributed, highly available, datacenter-aware scheduler
### END INIT INFO
# shellcheck disable=SC2015
# shellcheck disable=SC1090
# shellcheck disable=SC1091
# shellcheck disable=SC2034

PATH="{{ nomad_bin_dir }}:/usr/sbin:/usr/bin:/sbin:/bin"
DESC="Nomad, a distributed, highly available, datacenter-aware scheduler"
NAME="nomad"
DAEMON="{{ nomad_bin_dir }}/${NAME}"
PIDFILE="{{ nomad_run_dir }}/${NAME}.pid"
DAEMON_ARGS="agent -config {{ nomad_config_dir }} 2>&1"
USER="{{ nomad_user }}"
SCRIPTNAME="/etc/init.d/${NAME}"

[ -x "${DAEMON}" ] || exit 0

[ -r /etc/default/"${NAME}" ] && . /etc/default/"${NAME}"

[ -f /etc/default/rcS ] && . /etc/default/rcS

. /lib/lsb/init-functions

mkrundir() {
        [ ! -d "{{ nomad_run_dir }}" ] && mkdir -p "{{ nomad_run_dir }}"
        chown "${USER}" "{{ nomad_run_dir }}"
}

do_start() {
  mkrundir
  start-stop-daemon --start --quiet --pidfile "${PIDFILE}" --exec "${DAEMON}" \
       --chuid "${USER}" --background --make-pidfile --test > /dev/null \
      || return 1
  start-stop-daemon --start --quiet --pidfile "${PIDFILE}" --exec "${DAEMON}" \
      --chuid "${USER}" --background --make-pidfile -- \
      ${DAEMON_ARGS} \
      || return 2

  for i in $(seq 1 30); do
      if ! start-stop-daemon --quiet --stop --test --pidfile "${PIDFILE}" \
              --exec "${DAEMON}" --user "${USER}"; then
          sleep 1
          continue
      fi
      if "${DAEMON}" info >/dev/null; then
          return 0
      fi
  done
  return 2
}

do_stop() {
  start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 \
      --pidfile "${PIDFILE}" \
      --name "${NAME}"
  RETVAL="$?"
  [ "${RETVAL}" = 2 ] && return 2
  start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 \
      --exec "${DAEMON}"
  [ "$?" = 2 ] && return 2
  rm -f "${PIDFILE}"
  return "${RETVAL}"
}

do_reload() {
  start-stop-daemon --stop --signal 1 --quiet --pidfile "${PIDFILE}" \
      --name "${NAME}"
  return 0
}

case "$1" in
  start)
    [ "${VERBOSE}" != no ] && log_daemon_msg "Starting ${DESC}" "${NAME}"
    do_start
    case "$?" in
        0|1) [ "${VERBOSE}" != no ] && log_end_msg 0 ;;
        2) [ "${VERBOSE}" != no ] && log_end_msg 1 ;;
    esac
    ;;
  stop)
    [ "${VERBOSE}" != no ] && log_daemon_msg "Stopping ${DESC}" "${NAME}"
    do_stop
    case "$?" in
        0|1) [ "${VERBOSE}" != no ] && log_end_msg 0 ;;
        2) [ "${VERBOSE}" != no ] && log_end_msg 1 ;;
    esac
    ;;
  restart|force-reload)
    log_daemon_msg "Restarting ${DESC}" "${NAME}"
    do_stop
    case "$?" in
      0|1)
        do_start
        case "$?" in
            0) log_end_msg 0 ;;
            1) log_end_msg 1 ;;
            *) log_end_msg 1 ;;
        esac
        ;;
      *)
        # Stop failed
        log_end_msg 1
        ;;
    esac
    ;;
  *)
    echo "Usage: ${SCRIPTNAME} {start|stop|restart|force-reload}" >&2
    exit 3
    ;;
esac

:
